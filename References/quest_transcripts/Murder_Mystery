Murder Mystery
Sources: https://www.youtube.com/watch?v=6h96pFay7Dg

***Talking to a guard, starting the quest***

class GuardDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
            	0 -> playerl ("What's going on here?").also { stage++ }
				1 -> npcl ("Oh, it's terrible! Lord Sinclair has been murdered and we don't have any clues as to who or why. We're totally baffled!").also { stage++ }
				2 -> npcl ("If you can help us we will be very grateful.").also { stage ++ }
				3 -> options("Sure, I'll help!", "You should do your own dirty work.").also { stage++ }
				4 -> when(buttonId) {
				     1 -> playerl ("Sure, I'll help!").also { stage = 5 }
				     2 -> playerl ("You should do your own dirty work.").also { stage = 8 }
				}
				5 -> npcl ("Thanks a lot!").also { stage++ }
				6 -> playerl ("What should I be doing to help?").also { stage++ }
				7 -> npcl ("Look around and investigate who might be responsible. The Sarge said every murder leaves clues to who done it, but frankly we're out of our depth here.").also { stage = END_DIALOGUE }
				8 -> npcl ("Get lost then, this is private property ...unless you'd like to be taken for questioning yourself").also { stage = END_DIALOGUE }
			}
			     }
				     }
				
***Speaking to the guard again, with no further evidence***

class GuardDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
            	0 -> playerl ("What should I be doing to help again?").also { stage++ }
				1 -> npcl ("Look around and investigate who might be responsible. The Sarge said every murder leaves clues to who done it, but frankly we're out of our depth here.").also { stage++ }
				2 -> options("How did Lord Sinclair die?", "I know who did it!").also { stage++ }
				3 -> when(buttonId) {
				     1 -> playerl ("How did Lord Sinclair die?").also { stage = 4 }
				     2 -> playerl ("I know who did it!").also // { stage = 6 } if you have no proof, { stage = 32 } if you have the thread, { stage = 36 } if you found out someone lied about the poison, { stage = 61 } if you have all 3, ending the quest
				}
				4 -> npcl ("Well, it's all very mysterious. Mary, the maid, found the body in the study next to his bedroom on the east wing of the ground floor.").also { stage++ }
				5 -> npcl ("The door was found locked from the inside, and he seemed to have been stabbed, but there was an odd smell in the room. Frankly, I'm stumped.").also { stage = END_DIALOGUE }
				6 -> npcl ("Really? That was quick work! Who?").also { stage++ }
				7 -> options("It was an intruder!", "The butler did it!", "It was one of the servants!"), ("It was one of his family!").also { stage++ }
				8 -> when(buttonId) {
                     1 -> playerl("It was an intruder!").also { stage = 11 }
                     2 -> playerl("The butler did it!").also { stage = 9 }
                     3 -> playerl("It was one of the servants!").also { stage = 13 }
					 4 -> playerl("It was one of his family!").also { stage = 20 }
                }
				9 -> npcl("I hope you have proof to that effect. We have to arrest someone for this and it seems to me that only the actual murderer would gain by falsely accusing someone.").also { stage++ }
				10 -> npcl("Although having said that the butler is kind of shifty looking...").also { stage = END_DIALOGUE }
				11 -> npcl ("That's what we were thinking too. That someone broke in to steal something, was discovered by Lord Sinclair, stabbed him and ran. It's odd that apparently nothing was stolen though, find out something has been stolen, and the case is closed.").also { stage++ }
				12 -> npcl ("But the murdered man was a friend of the king and it's more than my jobs worth not to investigate fully.").also { stage = END_DIALOGUE }
				13 -> npcl ("Oh really? Which one?").also { stage++ }
				14 -> options("It was one of the women.", "It was one of the men.").also { stage++ }
				15 -> when(buttonId) {
				     1 -> playerl ("It was one of the women.").also { stage = 16 }
				     2 -> playerl ("It was one of the men.").also { stage = 18 }
				}
				16 -> options("It was so obviously Louisa The Cook.", "It must have been Mary The Maid.").also { stage++ }
				17-> when(buttonId) {
				     1 -> playerl ("It was so obviously Louisa The Cook.").also { stage = 27 }
				     2 -> playerl ("It must have been Mary The Maid.").also { stage = 27 }
				18 -> options("It can only be Donovan the Handyman.", "Pierre the Dog Handler. No question", "Hobbes the Butler. The butler *always* did it.", "You must know it was Stanford The Gardener.").also { stage++ }
				19-> when(buttonId) {
				     1 -> playerl ("It can only be Donovan the Handyman.").also { stage = 27 }
				     2 -> playerl ("Pierre the Dog Handler. No question.").also { stage = 27 }
					 3 -> playerl ("Hobbes the Butler. The butler *always* did it.").also { stage = 9 }
				     4 -> playerl ("You must know it was Stanford The Gardener.").also { stage = 27 }
				}
				20 -> npcl ("Oh really? Which one?").also { stage++ }
				21 -> options("It was one of the women.", "It was one of the men.").also { stage++ }
				22 -> when(buttonId) {
				     1 -> playerl ("It was one of the women.").also { stage = 23 }
				     2 -> playerl ("It was one of the men.").also { stage = 26 }
				23 -> options("I know it was Anna.", "I am so sure it was Carol.", "I'll bet you anything it was Elizabeth.").also { stage++ }
				24 -> when(buttonId) {
				     1 -> playerl ("I know it was Anna.").also { stage = 27 }
				     2 -> playerl ("I am so sure it was Carol.").also { stage = 27 }
					 1 -> playerl ("I'll bet you anything it was Elizabeth.").also { stage = 27 }
				25 -> options("I'm certain it was Bob.", "It was David. No doubt about it.", "If it wasn't Frank I'll eat my shoes.").also { stage++ }
				26 -> when(buttonId) {
				     1 -> playerl ("I'm certain it was Bob.").also { stage = 27 }
				     2 -> playerl ("It was David. No doubt about it.").also { stage = 27 }
					 1 -> playerl ("If it wasn't Frank I'll eat my shoes.").also { stage = 27 }
				28 -> {
                    interpreter!!.sendDialogue("You tell the guard who you suspect of the crime").also { stage++ }
					}
				28 -> npcl ("Great work, show me the evidence and we'll take them to the dungeons.").also { stage++ }
				29 -> npcl ("You *DO* have evidence of their crime, right?").also { stage++ }
				30  -> playerl ("Uh...").also { stage++ }
				31 -> npcl ("Tch. You wouldn't last a day in the guards with sloppy thinking like that. Come see me when you have some proof of your accusations.").also { stage = END_DIALOGUE }
				32 -> playerl ("I have proof that it wasn't any of the servants!").also { stage++ }
		        33 -> {
                    interpreter!!.sendDialogue("You show the guard the thread you found on the window.").also { stage ++ }
					 }
				34 -> playerl ("All the servants dress in black so it couldn't have been one of them.").also { stage++ }
				35 -> npcl ("That's some good work there. I guess it wasn't a servant. You still haven't proved who did do it though.").also { stage = END_DIALOGUE }
				36 -> playerl ("I have proof one of the family lied about the poison.").also { stage++ }
				// If it was Anna
				37 -> playerl ("I have proof that Anna is lying about the poison.").also { stage++ }
				38 -> npcl ("Oh really? How did you get that?").also { stage++ }
				39 -> {
                    interpreter!!.sendDialogue("You tell the guard about the compost heap.").also {  stage = 55  }
					 }
				// If it was Bob
				40 -> playerl ("I have proof that Bob is lying about the poison.").also { stage++ }
				41 -> npcl ("Oh really? How did you get that?").also { stage++ }
				42 -> {
                    interpreter!!.sendDialogue("You tell the guard about the beehive.").also {  stage = 55  }
					 }
				// If it was Carol
				43 -> playerl ("I have proof that Carol is lying about the poison.").also { stage++ }
				44 -> npcl ("Oh really? How did you get that?").also { stage++ }
				45 -> {
                    interpreter!!.sendDialogue("You tell the guard about the drain.").also {  stage = 55  }
					 }
				// If it was David
				46 -> playerl ("I have proof that David is lying about the poison.").also { stage++ }
				47 -> npcl ("Oh really? How did you get that?").also { stage++ }
				48 -> {
                    interpreter!!.sendDialogue("You tell the guard about the spiders nest.").also {  stage = 55  }
					 }
				// If it was Elizabeth
				49 -> playerl ("I have proof that Elizabeth is lying about the poison.").also { stage++ }
				50 -> npcl ("Oh really? How did you get that?").also { stage++ }
				51 -> {
                    interpreter!!.sendDialogue("You tell the guard about the mosquitos at the fountain.").also { stage = 55 }
					 }
				// If it was Frank
				52 -> playerl ("I have proof that Frank is lying about the poison.").also { stage++ }
				53 -> npcl ("Oh really? How did you get that?").also { stage++ }
				54 -> {
                    interpreter!!.sendDialogue("You tell the guard about the tarnished family crest.").also {  stage = 55  }
					 }
				55 -> npcl ("Hmm. That's some good detective work there, we need more evidence before we can close the case though. Keep up the good work.").also { stage = END_DIALOGUE }
				56 -> playerl ("I have the fingerprints of the culprit! I have [NAME]'s fingerprints here, you can see for yourself they match the fingerprints on the murder weapon exactly.").also { stage++ }
				57 -> {
                    interpreter!!.sendDialogue("You show the guard the finger prints evidence.").also { stage++ }
					 }
				58 -> npcl ("...").also { stage++ }
				59 -> npcl ("I'm impressed. How on earth did you think of something like that? I've never heard of such a technique for finding criminals before, this will come in very handy in the future!").also { stage++ }
				60 -> npcl ("But we can't arrest someone on just this. I'm afraid you'll still need to find more evidence before we can close this case completely.").also { stage++ }
				61 -> playerl ("I have conclusive proof who the killer was.").also { stage++ }
				62 -> npcl ("You do? That's excellent work. Let's hear it then.").also { stage++ }
				63 -> playerl ("I don't think it was an intruder, and I don't think Lord Sinclair was killed by being stabbed.").also { stage++ }
				64 -> npcl ("Hmmm? Really? Why not?").also { stage++ }
				65 -> playerl ("Nobody heard the guard dog barking, which it would have if it had been an intruder who was responsible.").also { stage++ }
				66 -> playerl ("Nobody heard any signs of a struggle either. I think the knife was there to throw suspicion away from the real culprit.").also { stage++ }
				67 -> npcl ("Yes, that makes sense. But who did do it then?").also { stage++ }
				68 -> {
                    interpreter!!.sendDialogue("You prove to the guard the thread matches [suspect]'s clothes.
				69 -> npcl ("Yes, I'd have to agree with that... but we need more evidence!").also { stage++ }
				70 -> {
                    interpreter!!.sendDialogue("You prove to the guard [suspect] did not use the poison on the [object].").also { stage++ }
					 }
				71 -> npcl ("Excellent work – have you considered a career as a detective? But I'm afraid it's still not quite enough...").also { stage++ }
				72 -> {
                    interpreter!!.sendDialogue("You match [culprit]'s finger prints with those on the dagger found in the body of Lord Sinclair.").also { stage++ }
					 }
				73 -> npcl ("Yes. There's no doubt about it. It must have been [suspect] who killed [his/her] father. All of the guards must congratulate you on your excellent work in helping us to solve this case.We don't have many murders here in gielinor and I'm afraid we wouldn't have been able to solve it by ourselves. We will hold [him/her] here under house arrest until such time as we bring [him/her] to trial.").also { stage++ }
				74 -> npcl ("ou have our gratitude, and I'm sure the rest of the family's as well, in helping to apprehend the murderer. I'll just take the evidence from you now.").also { stage++ }
				75 -> {
                    interpreter!!.sendDialogue("You hand over all the evidence.").also { stage++ } //This removes the quest items from your inventory and bank but you only need the criminal's objects in your inventory to finish the quest
					 }
				76 -> npcl ("Please accept this reward from the family!").also { stage++ }
				//QUEST COMPLETE
				
			}
			     }
				     }
					 

***Talking to a guard after the quest***

class GuardDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("Excellent work on solving the murder! All of the guards I know are very impressed, and don't worry, we have the murderer under guard until they can be taken to trial.").also { stage++ }
				1 -> playerl ("Is there anything else I can do? Seems awfully quiet up at the house, considering their sibling has just been arrested.").also { stage++ }
				2 -> npcl ("Is there anything else I can do? Seems awfully quiet up at the house, considering their sibling has just been arrested.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

					 

***Approaching the sturdy wooden gate***

//override fun handle(componentID: Int, buttonID: Int) {

  if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("As you approach the gate the Guard Dog starts barking loudly at you. There is no way an intruder could have committed the murder. It must have been someone the dog knew to get past it quietly.").also { stage END_DIALOGUE }
					}
					       }
						        }
								    }

***Picking up items in Lord Sinclair's room***

-Criminal's Dagger-

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("This knife doesn't seem sturdy enough to have killed Lord Sinclair.").also { stage ++ }
					//Add it to player inv
					}
					       }
						        }
								     }
	//Using it on a pot of flower prints "The murder weapon is now coated with a thin layer of flour and returns a dusted version of this item (That had the same exact name but is a different id)
								
-Pungent Pot-

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("It seems like Lord Sinclair was drinking from this before he died.").also { stage ++ }
					//Add it to player inv
					}
					       }
						        }
								     }
									 
-Broken Window-

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("Some thread seems to have been caught on a loose nail on the window.").also { stage ++ }
					//Add a Criminal's Thread item to the player's inv, its color depends on who the killer is
					}
					       }
						        }
								     }

***Talking to a gossip before starting the quest

class GossipDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
            	0 -> npcl("There's some kind of commotion up at the Sinclair place I hear. Not surprising all things considered.").also { Stage = END_DIALOGUE}
			}
			     }
				     }

***Talking to a gossip, having started the quest***

class GossipDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
            	0 -> playerl("I'm investigating the murder up at the Sinclair place.").also { Stage++ }
				1 -> npcl("Murder is it? Well, I'm not really surprised...").also { Stage++ }
				2 -> options("What can you tell me about the Sinclairs?", "Who do you think was responsible?", "I think the butler did it."), ("I'am so confused about who did it.").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("What can you tell me about the Sinclairs?").also { Stage = 4 }
			         2 -> playerl ("Who do you think was responsible?").also { Stage = 31 }
			         3 -> playerl ("I think the butler did it.").also { Stage = 32 }
                     4 -> playerl ("I'am so confused about who did it.").also { Stage =  }
					 }
				4 -> npcl("Well, what do you want to know?").also { Stage++ }
				5 -> options("Tell me about Lord Sinclair.", "Why do the Sinclairs live so far from town?", "What can you tell me about his sons?"), ("What can you tell me about his daughters?").also { stage++ }
			    6 -> when(buttonId) {
		             1 -> playerl ("Tell me about Lord Sinclair.").also { stage = 7 }
			         2 -> playerl ("Why do the Sinclairs live so far from town?").also { stage = 10 }
			         3 -> playerl ("What can you tell me about his sons?").also { stage = 12 }
                     4 -> playerl ("What can you tell me about his daughters?").also { stage = 15 }
					 }
				7 -> npcl("Old Lord Sinclair was a great man with a lot of respect around these parts. More than his worthless children have anyway.").also { Stage++ }
				8 -> playerl ("His children? They have something to gain by his death?").also { stage++ }
				9 -> npcl ("Yes. You could say that. Not that I am one to gossip.").also { stage = END_DIALOGUE }
				10 -> npcl ("Well, they used to live in the big castle, but old Lord Sinclair gave it up so that those strange knights could live there instead. So the king built him a new house to the North.").also { stage = END_DIALOGUE } 
				11 -> npcl ("It's more cramped than his old place, but he seemed to like it. His children were furious at him for doing it though!").also { stage = END_DIALOGUE }
				12 -> npcl ("His sons eh? They all have their own skeletons in their cupboards. You'll have to be more specific. Who are you interested in exactly?").also { stage++ }
				13 -> options("Tell me about Bob.", "Tell me about David.", "Tell me about Frank.").also { stage++ }
				14 -> when(buttonId) {
		             1 -> playerl ("Tell me about Bob.").also { Stage = 18 }
			         2 -> playerl ("Tell me about David.").also { Stage = 20 }
			         3 -> playerl ("Tell me about Frank.").also { Stage = 22 }
					 }
				15 -> npcl ("His daughters eh? They're all nasty pieces of work, which of them specifically did you want to know about?").also { stage++ }
				16 -> options("Tell me about Anna.", "Tell me about Carol.", "Tell me about Elizabeth.").also { stage++ }
				17 -> when(buttonId) {
		             1 -> playerl ("Tell me about Bob.").also { Stage = 24 }
			         2 -> playerl ("Tell me about David.").also { Stage = 26 }
			         3 -> playerl ("Tell me about Frank.").also { Stage = 28 }
					 }
				18 -> npcl ("Bob is an odd character indeed... I'm not one to gossip, but I heard Bob is addicted to Tea. He can't make it through the day without having at least 20 cups! You might not think that's such a big thing, but he has spent thousands of gold to feed his habit!").also { stage++ }
				19 -> npcl ("At one point he stole a lot of silverware from the kitchen and pawned it just so he could afford to buy his daily tea allowance. If his father ever found out, he would be in so much trouble... he might even get disowned!").also { stage = END_DIALOGUE }
				20 -> npcl ("David... oh David... not many people know this, but David really has an anger problem. He's always screaming and shouting at the household servants when he's angry, and they live in a state of fear, always walking on eggshells around him, but none of them have the courage to talk to his father about his behaviour.").also { stage++ }
				21 -> npcl ("If they did, Lord Sinclair would almost certainly kick him out of the house, as some of the servants have been there longer than he has, and he definitely has no right to treat them like he does... but I'm not one to gossip about people.").also { stage = END_DIALOGUE }
				22 -> npcl ("I'm not one to talk ill of people behind their back, but Frank is a real piece of work. He is an absolutely terrible gambler...he can't pass 2 dogs in the street without putting a bet on which one will bark first!").also { stage++ }
				23 -> npcl ("He has already squandered all of his allowance, and I heard he had stolen a number of paintings of his fathers to sell to try and cover his debts, but he still owes a lot of people a lot of money. If his father ever found out, he would stop his income, and then he would be in serious trouble!").also { stage = END_DIALOGUE }
				24 -> npcl ("Anna... ah yes... Anna has 2 great loves: Sewing and gardening. But one thing she has kept secret is that she once had an affair with Stanford the gardener, and tried to get him fired when they broke up by killing all of the flowers in the garden.").also { stage++ }
				25 -> npcl ("If her father ever found out she had done that he would be so furious he would probably disown her.").also { stage = END_DIALOGUE }
				26 -> npcl ("Oh Carol... she is such a fool. You didn't hear this from me, but I heard a while ago she was conned out of a lot of money by a travelling salesman who sold her a box full of beans by telling her they were magic. But they weren't.").also { stage++ }
				27 -> npcl ("She sold some rare books from the library to cover her debts, but her father would be incredibly annoyed if he ever found out – he might even throw her out of the house!").also { stage = END_DIALOGUE }
				28 -> npcl ("Elizabeth? Elizabeth has a strange problem... She cannot help herself, but is always stealing small objects – it's pretty sad that she is rich enough to afford to buy things, but would rather steal them instead.").also { stage++ }
				29 -> npcl ("Now, I don't want to spread stories, but I heard she even stole a silver needle from her father that had great sentimental value for him. He was devastated when it was lost, and cried for a week thinking he had lost it!").also { stage++ }
				30 -> npcl ("If he ever found out that it was her who had stolen it he would go absolutely mental, maybe even disowning her!").also { stage = END_DIALOGUE }
				31 -> npcl ("Well, I guess it could have been an intruder, but with that big guard dog of theirs I seriously doubt it. I suspect it was someone closer to home... Especially as I heard that the poison salesman in the Seers' village made a big sale to one of the family the other day.").also { stage = END_DIALOGUE }
				32 -> npcl ("And I think you've been reading too many cheap detective novels. Hobbes is kind of uptight, but his loyalty to old Lord Sinclair is beyond question.").also { stage = END_DIALOGUE }
				33 -> playerl ("Think you could give me any hints?").also { stage++ }// These change with quest progression
				34 -> npcl ("Well, I don't know if it's related, but I heard from that Poison Salesman in town that he sold some poison to one of the Sinclair family the other day. I don't think he has any stock left now though...").also { stage = END_DIALOGUE }// If you haven't talked with the poison salesman
				35 -> npcl ("Well, I don't know how much help this is, but I heard their guard dog will bark loudly at anyone it doesn't recognise. Maybe you should find out if anyone heard anything suspicious?").also { stage = END_DIALOGUE }// If you haven't questioned the servants on this matter
				36 -> npcl ("Well, this might be of some help to you. My father was in the guards when he was younger and he always said that there isn't a crime that can't be solved through careful examination of the crime scene and all surrounding areas.").also { stage = END_DIALOGUE }// After you question the Sinclaires on where they used the poison
				37 -> npcl ("I don't know how much help this is to you, but my dad was in the guard once and he told me the marks on your hands are totally unique. He calls them 'finger prints'.").also { stage++ }
				38 -> npcl ("He said you can find them easily on any shiny metallic surface, by using a fine powder to mark out where the marks are and then using some sticky paper to lift the print from the object. I bet if you could find a way to get everyone's 'finger prints' you could solve the crime pretty easily").also { stage = END_DIALOGUE } //Before you dust the Criminal's Dagger
				39 -> npcl ("My father used to be in the guard, he always wrote himself notes on a piece of paper so he could keep track of information easily. Maybe you should try that?").also { stage++ }
				40 -> npcl ("Don't forget to thank me if I help you solve the case!").also { stage = END_DIALOGUE }//Possibly anytime or after exhausting all other hints
				
				
			}
			     }
				     }
					 
***Talking to the Gossip after the quest***

class GossipDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		
		        0 -> npcl ("I heard you solved the murder! Was I of any help to you at all?").also { stage++ }
		
			}
			     }
				     }
					 
***Talking to the poison salesman before the quest***

class PosionSalesmanDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		       0 -> npcl ("I'm afraid I'm all sold out of poison at the moment. People know a bargain when they see it!").also { stage = END_DIALOGUE }
		
			}
			     }
				     }
					 
***Talking to poison salesman after starting the quest***

class PosionSalesmanDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		       0 -> playerl ("I'm investigating the murder at the Sinclair house.").also { stage++ }
			   1 -> npcl ("There was a murder at the Sinclair house??? That's terrible! And I was only there the other day too! They bought the last of my Patented Multi Purpose Poison!").also { stage++ }
			   2 -> options("Patented Multi Purpose Poison?", "Who did you sell Poison to at the house?", "Can I buy some Poison?"), ("I have the pot I found at the murder scene...").also { stage++ }
			   3 -> when(buttonId) {
		             1 -> playerl ("Patented Multi Purpose Poison?").also { stage = 13 }
			         2 -> playerl ("Who did you sell Poison to at the house?").also { stage = 4 }
			         3 -> playerl ("Can I buy some Poison?").also { stage = 19 }
                     4 -> playerl ("I have the pot I found at the murder scene...").also { stage = 8 } //shows up if you have the pungent pot in your inv
					 }
			   4 -> npcl ("Well, Peter Potter's Patented Multi Purpose Poison is a product of such obvious quality that I am glad to say I managed to sell a bottle to each of the Sinclairs!").also { stage++ }
			   5 -> npcl ("Anna, Bob, Carol, David, Elizabeth and Frank all bought a bottle! In fact they bought the last of my supplies!").also { stage++ }
			   6 -> npcl ("Maybe I can take your name and address and I will personally come and visit you when stocks return?").also { stage++ }
			   7 -> playerl ("Uh...no, it's ok.").also { stage = END_DIALOGUE }
			   8 -> {
                    interpreter!!.sendDialogue("You show the poison salesman the pot you found at the murder scene with the unusual smell.").also { stage ++ }
					  }
			   9 -> npcl ("Hmmm... yes, that smells exactly like my Patented Multi Purpose Poison, but I don't see how it could be. It quite clearly says on the label of all bottles").also { stage++ }
			   10 -> npcl ("'Not to be taken internally – EXTREMELY POISONOUS'.").also { stage++ }
			   11 -> playerl ("Perhaps someone else put it in his wine?").also { stage++ }
			   12 -> npcl ("Yes... I suppose that could have happened...").also { stage = END_DIALOGUE }
			   13 -> npcl ("Aaaaah... a miracle of modern apothecaries! This exclusive concoction has been tested on all known forms of life and been proven to kill them all in varying dilutions from cockroaches to king dragons!").also { stage++ }
			   14 -> npcl ("So incredibly versatile, it can be used as pest control, a cleansing agent, drain cleaner, metal polish and washes whiter than white, all with our uniquely fragrant concoction that is immediately recognisable across the land as Peter Potter's Patented Poison potion!!!").also { stage++ }
			   15 -> {
                    interpreter!!.sendDialogue("The salesman stops for breath.").also // { stage ++ } if its green, otherwise { stage = 12 }
					  }
			   16 -> npcl ("I'd love to sell you some but I've sold out recently. That's just how good it is! Three hundred and twenty eight people in this area alone cannot be wrong! Nine out of Ten poisoners prefer it in controlled tests!").also { stage++ }
			   17 -> npcl ("Can I help you with anything else? Perhaps I can take your name and add it to our mailing list of poison users? We will only send you information related to the use of poison and other Peter Potter Products!").also { stage++ }
			   18 -> playerl ("Uh... no, it's ok. Really.").also { stage = END_DIALOGUE }
			   19 -> npcl ("'m afraid I am totally out of stock at the moment after my successful trip to the Sinclairs' House the other day. But don't worry! Our factories are working overtime to produce Peter Potter's Patented Multi Purpose Poison!").also { stage++ }
			   20 -> npcl ("Possibly the finest multi purpose poison and cleaner yet available to the general market. And its unique fragrance makes it the number one choice for cleaners and exterminators the whole country over!").also { stage = END_DIALOGUE }
			}
			     }
				     }
					 
***Speaking with Anna ***

class AnnaDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("Oh really? What do you want to know then?").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 6 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 8 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 11 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("It was clearly an intruder.").also { stage++ }
				5 -> playerl ("Well, I don't think it was.").also { stage++ }
				6 -> npcl ("It was one of our lazy servants then.").also { stage = END_DIALOGUE }
				7 -> npcl ("In the library. No one else was there so you'll just have to take my word for it.").also { stage = END_DIALOGUE }
				8 -> {
                    interpreter!!.sendDialogue("You show Anna the thread from the study.").also // { stage ++ } if its green, otherwise { stage = 12 }
					  }
				9 -> npcl ("It's some Green thread. It's not exactly uncommon is it? My trousers are made of the same material.").also { stage = END_DIALOGUE }
				10 -> npcl ("Not really, no. Thread is fairly common.").also { stage = END_DIALOGUE }
				11 -> npcl ("That useless Gardener Stanford let his compost heap fester. It's an eyesore to the garden! So I bought some poison from a travelling salesman so that I could kill off some of the wildlife living in it.").also { stage++ }
		
			}
			     }
				     }

***Speaking with Bob ***

class BobDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("I suppose I had better talk to you then.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 5 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 8 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 11 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("I don't really care as long as no one thinks it's me. Maybe it was that strange poison seller who headed towards the seers village.").also { stage = END_DIALOGUE }
				5 -> npcl ("I was walking by myself in the garden.").also { stage++ }
				6 -> playerl ("And can anyone vouch for that?").also { stage++ }
				7 -> npcl ("No. But I was.").also { stage = END_DIALOGUE }
				8 -> {
                    interpreter!!.sendDialogue("You show him the thread you discovered.").also // { stage ++ } if its red, otherwise { stage = 12 }
					  }
				9 -> npcl ("It's some red thread. I suppose you think that's some kind of clue? It looks like the material my trousers are made of.").also { stage = END_DIALOGUE }
				10 -> npcl ("It's some thread. Great clue. No, really.").also { stage = END_DIALOGUE }
				11 -> npcl ("What's it to you anyway? If you absolutely must know, we had a problem with the beehive in the garden, and as all of our servants are so pathetically useless, I decided I would deal with it myself. So I did.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

***Speaking with Carol ***

class CarolDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("Well, ask what you want to know then.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 5 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 6 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 9 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("I don't know. I think it's very convenient that you have arrived here so soon after it happened. Maybe it was you.").also { stage = END_DIALOGUE }
				5 -> npcl ("Why? Are you accusing me of something? You seem to have a very high opinion of yourself. I was in my room if you must know, alone.").also { stage = END_DIALOGUE }
				6 -> {
                    interpreter!!.sendDialogue("You should Carol the thread found at the crime scene.").also // { stage ++ } if its red, otherwise { stage = 10 }
					  }
				7 -> npcl ("It's some red thread... it kind of looks like the Same material as my trousers. But obviously it's not.").also { stage = END_DIALOGUE }
				8 -> npcl ("It's some red thread. Sorry, do you have a point here? Or do you just enjoy wasting people's time?").also { stage = END_DIALOGUE }
				9 -> npcl ("I don't see what on earth it has to do with you, but the drain outside was blocked, and as nobody else here has the intelligence to even unblock a simple drain I felt I had to do it myself.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

***Speaking with David ***

class DavidDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("And? Make this quick. I have better things to do than be interrogated by halfwits all day.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 5 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 6 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 9 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("I don't really know or care. Frankly, the old man deserved to die. There was a suspicious red headed man who came to the house the other day selling poison now I think about it. Last I saw he was headed towards the tavern in the Seers village.").also { stage = END_DIALOGUE }
				5 -> npcl ("That is none of your business. Are we finished now, or are you just going to stand there irritating me with your idiotic questions all day?").also { stage = END_DIALOGUE }
				6 -> {
                    interpreter!!.sendDialogue("You show him the thread you found on the study window.").also // { stage ++ } if its green, otherwise { stage = 10 }
					  }
				7 -> npcl ("It's some Green thread, like my trousers are made of. Are you finished? I'm not sure which I dislike more bout you, your face or your general bad odour").also { stage = END_DIALOGUE }
				8 -> npcl ("No. Can I go yet? Your face irritates me.").also { stage = END_DIALOGUE }
				9 -> npcl ("There was a nest of spiders upstairs between the two servants' quarters. Obviously I had to kill them before our pathetic servants whined at my father some more.").also { stage++ }
				10 -> npcl ("Honestly, it's like they expect to be treated like royalty! If I had my way I would fire the whole workshy lot of them!").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

***Speaking with Donovan ***

class DonovanDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 6 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 7 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 10 }//Only after talking to the Poison Salesman
					 }
				4 -> npcl ("Oh... I really couldn't say. I wouldn't really want to point any fingers at anybody. If I had to make a guess I'd have to say it was probably Bob though.").also { stage++ }
				5 -> npcl ("I saw him arguing with Lord Sinclair about some missing silverware from the Kitchen. It was a very heated argument.").also { stage = END_DIALOGUE }
				6 -> npcl ("Me? I was sound asleep here in the servants Quarters. It's very hard work as a handyman around here. There's always something to do!").also { stage = END_DIALOGUE }
				7 -> npcl ("Hmmm... No, I didn't, but I sleep very soundly at night").also { stage++ }
				8 -> playerl ("So you didn't hear any sounds of a struggle or any barking from the guard dog next to his study window?").also { stage++ }
				9 -> npcl ("Now you mention it, no. It is odd I didn't hear anything like that. But I do sleep very soundly as I said and wouldn't necessarily have heard it if there was any such noise.").also { stage = END_DIALOGUE }
				10 -> npcl ("Well, I do know Frank bought some poison recently to clean the family crest that's outside. It's very old and rusty, and I couldn't clean it myself, so he said he would buy some cleaner and clean it himself.").also { stage++ }
				11 -> npcl ("He probably just got some from that Poison Salesman who came to the door the other day... You'd really have to ask him though.").also { stage = END_DIALOGUE }
				
		
			}
			     }
				     }

***Speaking with Elizabeth ***

class ElizabethDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("What's so important you need to bother me with then?").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 6 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 8 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 11 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("Could have been anyone. The old man was an idiot. He's been asking for it for years.").also { stage = END_DIALOGUE }
				5 -> npcl ("I was out.").also { stage++ }
				6 -> playerl ("Care to be any more specific?").also { stage++ }
				7 -> npcl ("Not really. I don't have to justify myself to the likes of you, you know. I know the King personally you know. Now are we finished here?").also { stage = END_DIALOGUE }
				8 -> {
                    interpreter!!.sendDialogue("You show him the thread you found on the study window.").also // { stage ++ } if its blue, otherwise { stage = 14 }
					  }
				9 -> npcl (" Looks like Blue thread to me. If you can't work that out for yourself I don't hold much hope of you solving this crime.").also { stage++ }
				10 -> playerl ("It looks a lot like the material your trousers are made of doesn't it?").also { stage++ }
				11 -> npcl ("I suppose it does. So what?").also { stage = END_DIALOGUE }
				12 -> npcl (" It's some thread. You're not very good at this whole investigation thing are you?").also { stage = END_DIALOGUE }
				13 -> npcl ("There was a nest of mosquitos under the fountain in the garden, which I killed with poison the other day. You can see for yourself if you're capable of managing that, which I somehow doubt.").also { stage++ }
				14 -> playerl ("I hate mosquitos!").also { stage++ }
				15 -> npcl ("Doesn't everyone?").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

***Speaking with Frank ***

class FrankDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("Good for you. Now what do you want?.").also { stage++ }
				2 -> npcl ("...And can you spare me any money? I'm a little short...").also { stage++ }
				3 -> options("Who do you think is responsible?", "Where were you when the murder happened?", "Do you recognise this thread?"), ("Why'd you buy poison the other day?").also { stage++ }
				4 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you when the murder happened?").also { stage = 5 }
			         3 -> playerl ("Do you recognise this thread?").also { stage = 6 } //Only if you have Criminal's Thread
                     4 -> playerl ("Why'd you buy poison the other day?").also { stage = 9 } //Only if you talked with the Poison Salesman
					 }
				4 -> npcl ("I don't know. You don't know how long it takes an inheritance to come through do you? I could really use that money pretty soon...").also { stage = END_DIALOGUE }
				5 -> npcl ("I don't know, somewhere around here probably. Could you spare me a few coins? I'll be able to pay you back double tomorrow it's just there's this poker night tonight in town...").also { stage = END_DIALOGUE }
				6 -> {
                    interpreter!!.sendDialogue("Frank examines the thread from the crime scene.").also // { stage ++ } if its blue, otherwise { stage = 11 }
					  }
				7 -> npcl ("It kind of looks like the same material as my trousers are made of... same colour anyway. Think it's worth anything? Can I have it? Or just some money?").also { stage = END_DIALOGUE }
				8 -> npcl ("It looks like thread to me, but I'm not exactly an expert. Is it worth something? Can I have it? Actually, can you spare me a few gold?").also { stage = END_DIALOGUE }
				9 -> npcl ("Would you like to buy some? I'm kind of strapped for cash right now. I'll sell it to you cheap. It's hardly been used at all.").also { stage++ }
				10 -> npcl ("I just used a bit to clean that family crest outside up a bit. Do you think I could get much money for the family crest, actually? It's cleaned up a bit now.").also { stage = END_DIALOGUE }

				
		
			}
			     }
				     }

***Speaking with Hobbes ***

class HobbesDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 7 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 8 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 13 }//Only after talking to the Poison Salesman
					 }
				4 -> npcl ("Well, in my considered opinion it must be David. The man is nothing more than a bully. And I happen to know that poor Lord Sinclair and David had a massive argument in the living room about the way he treats the staff, the other day.").also { stage++ }
				5 -> npcl ("I did not intend to overhear their conversation, but they were shouting so loudly I could not help but Overhear it. David definitely used the words 'I am going to kill you!' as well.").also { stage++ }
				6 -> npcl ("I think he should be the prime suspect. He has a nasty temper that one.").also { stage = END_DIALOGUE }
				7 -> npcl ("I was assisting the cook with the evening meal. I have Mary His Lordships' dinner, and sent her to take it to him, then heard the scream as she found the body.").also { stage = END_DIALOGUE }
				8 -> npcl ("How do you mean 'suspicious'?").also { stage++ }
				9 -> playerl ("Any sounds of a struggle with Lord Sinclair?").also { stage++ }
				10 -> npcl ("No, I definitely didn't hear anything like that.").also { stage++ }
				11 -> playerl ("How about the guard dog barking at all?").also { stage++ }
				12 -> npcl ("You know, now you come to mention it I don't believe I did. I suppose that is Proof enough that it could not have been an intruder who is responsible.").also { stage = END_DIALOGUE }
				13 -> npcl ("Well, I do know that Elizabeth was extremely annoyed by the mosquito nest under the fountainin the garden, and was going to do something about it. I suspect any poison she bought would have been to get rid of it. ").also { stage++ }
				14 -> npcl ("A good job, too. I hate mosquitos").also { stage++ }
				15 -> playerl ("Yeah, so do I").also { stage++ }
				16 -> npcl ("You'd really have to ask her though").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

***Speaking with Louisa ***

class LouisaDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 5 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 6 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 11 }//Only after talking to the Poison Salesman
					 }
				4 -> npcl ("Elizabeth. Her father confronted her about her constant petty thieving, and was devastated to find she had stolen a silver needle which had meant a lot to him. You could hear their argument from Lumbridge!").also { stage++ }
				5 -> npcl ("I was right here with Hobbes and Mary. You can't suspect me surely!").also { stage++ }
				6 -> npcl ("Suspicious? What do you mean suspicious?").also { stage++ }
				7 -> playerl ("Any sounds of a struggle with an intruder for example?").also { stage++ }
				8 -> npcl ("No, I'm sure I don't recall any such thing.").also { stage++ }
				9 -> playerl ("How about the guard dog barking at an intruder?").also { stage++ }
				10 -> npcl ("No, I didn't. If you don't have anything else to ask can You go and leave me alone now? I have a lot of cooking to do for this evening.").also { stage++ }
				11 -> npcl ("I told Carol to buy some from that strange poison salesman and clean the drains before they began to smell any worse. She was the one who blocked them in the first place with a load of beans that she bought for some reason. There were far too many to eat, and they were almost rotten when she bought them anyway!").also { stage++ }
				12 -> npcl ("You'd really have to ask her though.").also { stage++ }
		
			}
			     }
				     }

***Speaking with Mary ***

class MaryDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 5 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 6 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 11 }//Only after talking to the Poison Salesman
					 }
				1 -> playerl ("Who do you think is responsible?").also { stage = }
				1 -> npcl ("Oh I don't know... Frank was acting kind of funny... After that big argument him and the Lord had the other day by the beehive... so I guess maybe him... but it's really scary to think someone here might have been responsible. I actually hope it was a burglar...").also { stage++ }
				2 -> playerl ("Where were you at the time of the murder?").also { stage++ }
				1 -> npcl ("I was with Hobbes and Louisa in the Kitchen helping to prepare Lord Sinclair's meal, and then when I took it to his study... I saw... oh, it was horrible... he was...").also { stage++ }
				9 -> {
                    interpreter!!.sendDialogue("She seems to be on the verge of crying. You decide not to push her anymore for details.").also{ stage ++ }
					  }
				2 -> playerl ("Did you hear any suspicious noises at all?").also { stage++ }
				1 -> npcl ("I don't really remember hearing anything out of the ordinary.").also { stage++ }
				2 -> playerl ("No sounds of a struggle then?").also { stage++ }
				1 -> npcl ("No, I don't remember hearing anything like that.").also { stage++ }
				2 -> playerl ("How about the guard dog barking?").also { stage++ }
				1 -> npcl ("Oh that horrible dog is always barking at noting but I don't think I did...").also { stage++ }
				2 -> playerl ("Do you know why so much poison was bought recently?").also { stage++ }
				1 -> npcl ("I overheard Anna saying to Stanford that if he didn't do something about the state of his compost heap, she was going to. She really doesn't get on well with Stanford, I really have no idea why.").also { stage++ }
				2 -> npcl ("You'd really have to ask her though.").also { stage++ }
		
			}
			     }
				     }

***Speaking with Pierre ***

class PierreDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 5 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 6 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 11 }//Only after talking to the Poison Salesman
					 }
				1 -> playerl ("Who do you think is responsible?").also { stage = }
		        1 -> npcl ("Honestly? I think it was Carol. I saw her in a huge argument with Lord Sinclair in the library the other day. It was something to do with stolen books. She definitely seemed upset enough to have done it afterwards.").also { stage++ }
				2 -> playerl ("Where were you when the murder happened?").also { stage++ }
				1 -> npcl ("I was in town at the inn. When I got back the house was swarming with guards who told me what had happened. Sorry.").also { stage++ }
				2 -> playerl ("Did you hear any suspicious noises at all?").also { stage++ }
				1 -> npcl ("Well, like what?").also { stage++ }
				2 -> playerl ("Any sounds of a struggle with Lord Sinclair?").also { stage++ }
				1 -> npcl ("No, I don't remember hearing anything like that.").also { stage++ }
				2 -> playerl ("how about the guard dog barking at all?").also { stage++ }
				1 -> npcl ("I hear him bark all the time. It's one of his favourite things to do. I can't say I did the night of the murder though as I wasn't close enough to hear either way.").also { stage++ }
				2 -> playerl ("Do you know why so much poison was bought recently?").also { stage++ }
				1 -> npcl ("Well, I know David said that he was going to do something about the spiders' nest that's between the two servants' quarters upstairs. He made a big deal about it to Mary the Maid, calling her useless and incompetent. I felt quite sorry for her actually.").also { stage++ }
				2 -> npcl ("You'd really have to ask him though.").also { stage++ }
			}
			     }
				     }

***Speaking with Stanford***

class StanfordDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> playerl ("I'm here to help the guards with their investigation.").also { stage++ }
				1 -> npcl ("How can I help?.").also { stage++ }
				2 -> options("Who do you think is responsible?", "Where were you at the time of the murder?", "Did you hear any suspicious noises at all?", "Do you know why so much poison was bought recently?").also { stage++ }
				3 -> when(buttonId) {
		             1 -> playerl ("Who do you think is responsible?").also { stage = 4 }
			         2 -> playerl ("Where were you at the time of the murder?").also { stage = 5 }
			         3 -> playerl (Did you hear any suspicious noises at all?).also { stage = 6 } //This may only trigger when you first hear the dog
                     4 -> playerl ("Do you know why so much poison was bought recently?").also { stage = 11 }//Only after talking to the Poison Salesman
					 }
				4 -> npcl ("It was Anna. She is seriously unbalanced. She trashed the garden once then tried to blame it on me! I bet it was her. It's just the kind of thing she'd do! She really hates me and was arguing with Lord Sinclair about trashing the garden a few days ago.").also { stage = END_DIALOGUE }
				5 -> npcl ("Right here, by my little shed. It's very cosy to sit and think in.").also { stage++ }
				6 -> npcl ("Not that I remember.").also { stage++ }
				7 -> playerl ("So no sounds of a struggle between Lord Sinclair and an intruder?").also { stage++ }
				8 -> npcl ("Not to the best of my recollection.").also { stage++ }
				9 -> playerl ("How about the guard dog barking?").also { stage++ }
				10 -> npcl ("Not that I can recall.").also { stage++ }
				11 -> npcl ("Well, Bob mentioned to me the other day he wanted to get rid of the bees in that hive over there. I think I saw him buying poison from that poison salesman the other day. I assume it was to sort out those bees.").also { stage++ }
				12 -> npcl ("You'd really have to ask him though.").also { stage++ }
		
			}
			     }
				     }

***Flypaper Barrel  ***

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("There's some flypaper in there. Should I take it?").also { stage ++ }
					}
	     1 -> options("Yes, it might be useful.", "No, I don't see any need for it").also { stage++ }
				2 -> when(buttonId) {
				     1 -> //add a flypaper to the player's inventory and  { stage = 3 }
				     2 -> { stage = END_DIALOGUE }
		 3 -> {
                    interpreter!!.sendDialogue("You take a piece of flypaper. There is still plenty of paper left.").also { stage = END_DIALOGUE }
					}
					       }
						        }
								     }
									 
//if you use the flypaper on the Criminal's Dagger after coating it in flour it will print "You use the flypaper on the floury dagger" and in another line "You have a clean impression of the murderer's finger prints", if you use it on a person's belonging it will replace 'murderer' with their name in the printed description

***Silver item Barrels***

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("You need the guards permission to do that.").also { stage = END_DIALOGUE }// If you haven't started the quest or if you have completed it. This applies for all quest objects
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take Anna's Silver Necklace.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take Bob's Cup.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take Carol's Silver Bottle.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take David's Silver Book.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take Elizabeth's Silver Needle.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There's something shiny at the bottom. You take Frank's Silver Pot.").also { stage = END_DIALOGUE }
					}
					       }
						        }
								     }
									 
***Poisoned locations***

*Before asking each Sinclair where they used their poison

//override fun handle(componentID: Int, buttonID: Int) {


   if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("You need the guards permission to do that.").also { stage = END_DIALOGUE }// If you haven't started the quest or if you have completed it. This applies for all quest objects
					interpreter!!.sendDialogue("A fountain with large numbers of insects around the base.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("Its a heap of Compost.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("It's a very old beehive.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("It's the drain from the kitchen").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The Sinclair Family Crest is hung up here.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("It looks like a Spiders Nest of some kind.").also { stage = END_DIALOGUE }
					}
					       }
						        }
								     }
									 
*If the Sinclair is Innocent

   if(questStage == #){

     when(stage){
	     0 -> {
					interpreter!!.sendDialogue("There are a lot of dead mosquitos around the base of the fountain. A faint smell of poison is in the air, but the water seems clean").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There is a faint smell of poison behind the smell of the compost.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The hive is empty. There are a few dead bees and a faint smell of poison.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The drain seems to have been recently cleaned. You can still smell the faint aroma of poison").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The sinclair family crest it's shiny and freshly polished and has a slight smell of poison.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("A faint smell of poison and a few dead spiders is all that remains of the spiders nest.").also { stage = END_DIALOGUE }
					}
					       }
						        }
								     }
									 
*If the Sinclair is Guilty

   if(questStage == #){

     when(stage){
	        0 -> {
					interpreter!!.sendDialogue("The fountain is swarming with mosquitos. There's a nest of them underneath the fountain.").also { stage = 1 }
					interpreter!!.sendDialogue("The compost is teeming with maggots. Somebody should really do something about it. It's clear nobody's used poison here.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The beehive buzzes with activity. These bees definitely don't seem to be poisoned at all.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("The drain is totally blocked. It really stinks. No, it REALLY smells bad. It's certainly clear nobody's cleaned it recently.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("It looks like the Sinclair Family Crest but it is very dirty. You can barely make it out under all of the grime, it's certainly clear nobody's cleaned it recently.").also { stage = END_DIALOGUE }
					interpreter!!.sendDialogue("There is a spiders nest here. You estimate there must be at least a few hundred spiders ready to hatch, it's certainly clear nobody's used poison here.").also { stage = END_DIALOGUE }
					}
			1 -> playerl ("I hate mosquitos, they're so annoying!").also { stage++ }
			2 -> {
					interpreter!!.sendDialogue("It's certainly clear nobody's used poison here.").also { stage = END_DIALOGUE }
			     }
					       }
						        }
								     }
									 
***Comparing the murderer's print with the others***

*If not guilty

//override fun handle(componentID: Int, buttonID: Int) {

  if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("They don't seem to be the same. I guess that clears [NAME] of the crime. You destroy the useless fingerprint.").also { stage END_DIALOGUE }
					}
					       }
						        }
								    }
*If guilty then print to the chatbox

"The fingerprints are an exact match to [NAME]'s."

***Sinclair dialogue before begining the quest***

//override fun handle(componentID: Int, buttonID: Int) {

  if(questStage == #){

     when(stage){
	     0 -> {
                    interpreter!!.sendDialogue("They are ignoring you .").also { stage END_DIALOGUE }
					}
					       }
						        }
								    }
									
									
***Sinclair dialogue after the quest***

//override fun handle(componentID: Int, buttonID: Int) {

  if(questStage == #){

     when(stage){
	     0 -> npcl ("Apparently you aren't as stupid as you look.").also { stage = END_DIALOGUE }
					       }
						        }
								    }
									
***Servant dialogue after the quest***

//override fun handle(componentID: Int, buttonID: Int) {

  if(questStage == #){

     when(stage){
	     0 -> npcl ("Thank you for all your help in solving the murder.").also { stage = END_DIALOGUE }
					       }
						        }
								    }
									
***Servant dialogue before the quest***

-Donovan

class DonovanDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("I have no interest in talking to gawkers.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }
					 
- Hobbes

class HobbesDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("This is private property! Please leave!").also { stage = END_DIALOGUE }
		
			}
			     }
				     }
					 
-Louisa

class LouisaDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("I'm far too upset to talk to random people right now.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }
					 
-Mary

Same as Sinclairs
					 
-Pierre

class PierreDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("The Guards told me not to talk to anyone.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }

-Stanford

class StanfordDialogue : DialogueFile() {
    override fun handle(componentID: Int, buttonID: Int) {
        when(stage) {
		        0 -> npcl ("Have you no shame? we are all grieving at the moment.").also { stage = END_DIALOGUE }
		
			}
			     }
				     }
