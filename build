#!/usr/bin/env bash

SCRIPT_DIR=$(cd -- "$(dirname "$0")" >/dev/null 2>&1 ; pwd -P)

BUILD_GS=0
SKIPTEST=""
GS_SRC=$SCRIPT_DIR/Emulator

CLEANOPT=""
_JAR_DIR="$SCRIPT_DIR/builddir"

help() {
    echo "Usage: $0 [-h] <-g> [-c <g>] [-o <path>] [-q]";
    echo "  -h: Display this message.";
    echo "  -g: Build the game server.";
    echo "  -c: Clean: g: gameserver. Can specify this if needed.";
    echo "  -o: Specify jar-file directory.";
    echo "  -q: Quick build - will skip tests.";
}

error() {
    echo "$1"
    exit 1
}

clean_gs() {
    cd "$GS_SRC" || error "Failed to change directory to Emulator."

    if [[ "$CLEANOPT" == *"g"* ]]; then
        echo "Cleaning the game server."
        sh mvnw clean || error "Failed to clean the game server."
    fi
}

build_gs() {
    cd "$GS_SRC" || error "Failed to change directory to Emulator."

    sh mvnw package $SKIPTEST || error "Failed to build the game server."
}

while getopts "hqgc:o:d" arg; do
    case $arg in
        h)
            help
            exit 0
            ;;
        g)
            BUILD_GS=1
            ;;
        c)
            CLEANOPT=${OPTARG}
            ;;
        o)
            _JAR_DIR=${OPTARG}
            ;;
        d)
            echo "BUILD_GS=$BUILD_GS"
            echo "CLEANOPT=$CLEANOPT"
            echo "_JAR_DIR=$_JAR_DIR"
            ;;
        q)
            SKIPTEST="-DskipTests"
            ;;
        *)
            help
            exit 1
            ;;
    esac
done

# Validate CLEANOPT input
if [[ ! "$CLEANOPT" =~ ^(g|)$ ]]; then
    error "Invalid cleaning option '$CLEANOPT'. Valid options are 'g' or none."
fi

if [ $BUILD_GS -eq 0 ] && [[ $CLEANOPT == "" ]]; then
    error "Need to build or clean at least the game server. See -h for details."
fi

# Conditionals inside the functions.
clean_gs

if [ -d $_JAR_DIR ]; then
    rm -r $_JAR_DIR
fi

if [ $BUILD_GS -ne 1 ]; then
    echo "No build option for the game server specified. Stop."
    exit 0
fi

mkdir -p $_JAR_DIR || error "Failed to create build directory."

build_gs

# Will never execute if build_gs fails because it quits upon failure.
mv -v $GS_SRC/target/*-with-dependencies.jar $_JAR_DIR/server.jar
